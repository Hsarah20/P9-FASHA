name: Deploy and Validate Metadata

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  sfdxvalidate:
    name: "Run SFDX Validate"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install SFDX CLI and sfdx-git-delta plugin # Ce package va vous permettre de faire un delta entre votre branche et la branch ciblé. Voici la documentation : https://github.com/scolladon/sfdx-git-delta
        run: |
          npm install -g @salesforce/cli@latest
          echo "y" | npm install sfdx-git-delta@3.3.0 -g

      - name: Authenticate Salesforce # Vous devez avoir une connexion avec Salesforce pour pouvoir deployer le code à la dernière étape.
        run: |
          echo "${{ secrets.SF_SECRET }}" > server.key
          sfdx auth jwt grant --client-id ${{ secrets.SF_CONSUMER_KEY }} \
                              --username ${{ secrets.SF_USERNAME }} \
                              --jwt-key-file server.key \
                              --instance-url https://login.salesforce.com
          rm server.key

      - name: Generate metadata delta for pull request  # Utilisez le plug-in sfdx-git-delta pour effectuer un delta, generer le package xml dans un fichier temporaire ex : .temp
        run:  |
          mkdir -p .temp
          sfdx sgd:source:delta --to "HEAD" --from "origin/main" --output .temp --generate-delta
          if [ ! -s ".temp/package/package.xml" ]; then
            echo "No changes detected, skipping deployment."
            exit 0
          fi

      - name: Deploy metadata to production
        if: github.ref == 'refs/heads/main'
        run: |
          sfdx force:source:deploy -x .temp/package/package.xml -l RunLocalTests
